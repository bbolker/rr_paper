

theme_mine <- function(base_size = 12) {
  # Starts with theme_grey and then modify some parts
  # theme_bw(base_size = base_size, base_family = base_family) %+replace%
  theme_bw(base_size = base_size) %+replace%
    theme(
      strip.background = element_blank(),
      strip.text.x = element_text(size = 12),
      strip.text.y = element_text(size = 12),
      axis.text.x = element_text(size=12),
      axis.text.y = element_text(size=12,hjust=1),
      axis.ticks =  element_line(colour = "black"),
      axis.title.x = element_text(size=12),
      axis.title.y = element_text(size=12, angle=90),
      panel.background = element_blank(),
      panel.border =element_blank(),
      panel.grid.major = element_blank(),
      panel.grid.minor = element_blank(),
      panel.spacing = unit(1.0, "lines"),
      plot.background = element_blank(),
      # plot.spacing = unit(c(0.5,  0.5, 0.5, 0.5), "lines"),
      axis.line.x = element_line(color="black", size = 1),
      axis.line.y = element_line(color="black", size = 1)
    )
}

split.bseq <- function(object){
  listname <- "cond"
  reStruc <- object$modelInfo$reStruc[[paste0(listname, "ReStruc")]] ## random-effects structure
  nc <- vapply(reStruc, function(x) x$blockSize, numeric(1)) ## number of RE params per block
  nb <- vapply(reStruc, function(x) x$blockReps, numeric(1)) ## number of blocks per RE (may != nlevs in some cases)
  ### splitting the b's into their respective random effects
  nbseq <- rep.int(seq_along(nb), nb * nc)       ## splitting vector
  return(nbseq)
}


#For PIRLS

load.file.type <- function(file.type = "acg.*"){
  files <- paste0("Data/PIRLS/", list.files("Data/PIRLS/", pattern=file.type))
  data <- lapply(files, function(x) read.spss(x, use.value.label=TRUE, to.data.frame=TRUE))
}

summarise_var <- function( data, variable ,
                           missing_ignore = TRUE ,
                           categorical = class(data[[variable]])!="numeric",
                           n_dec = 1 )
{
  # Categorical/binary data
  if( categorical )
  {
    var_summary <- data %>%
      group_by(!!rlang::sym(variable)) %>%
      summarise(n = n(),
                p = round(n/nrow(data)*100, 1),
                mean_score = round(mean(Overall1),1),
                sd_score = round(sd(Overall1),1)) %>%
      ungroup()

    # var_n <- sum( variable , na.rm = TRUE )
    # var_perc <- mean( variable , na.rm = TRUE ) * 100
    # var_summary <- paste0( format( var_n , nsmall = 0 , digits = 0 , scientific = FALSE ) , " (" ,
    #                        format( var_perc , nsmall = n_dec , digits = n_dec ,
    #                                scientific = FALSE , width = 3 + n_dec ) , ")" )
  }
  # Numerical data
  if( !categorical )
  {
    var_mean <- mean( data[[variable]] , na.rm = TRUE )
    var_sd <- sd( data[[variable]] , na.rm = TRUE )
    var_corr <- cor(data[[variable]], data$Overall1)
    var_summary <- paste0( format( var_mean , nsmall = n_dec , digits = n_dec , scientific = FALSE ) , " (" ,
                           format( var_sd , nsmall = n_dec , digits = n_dec , scientific = FALSE ) , ")",
                           " r = ", format(var_corr, nsmall = n_dec , digits = n_dec , scientific = FALSE ))
  }
  return( var_summary )
}
