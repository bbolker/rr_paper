load("Fits/mainANOVAresults_04.RData")
library(tidyr)
library(dplyr)
getCoefsLong <- function(model, which.Xcoef = NULL, incl.intercept = FALSE,
                         model.name = "model"){

  if(is.null(which.Xcoef)){
    if(!incl.intercept)
      which.Xcoef <- 2:nrow(object$coefficients)
    else
      which.Xcoef <- 1:nrow(object$coefficients)
  }
  coef <- as.data.frame(model$coefficients)[which.Xcoef,]
  coef$Variable <- rownames(model$coefficients)[which.Xcoef]
  coef.sd <- as.data.frame(sqrt(model$var.coefficients))[which.Xcoef,]
  coef.sd$Variable <- rownames(model$var.coefficients)[which.Xcoef]

  coef_long <- pivot_longer(coef, cols = 1:ncol(model$coefficients),
                            names_to = "spp",
                            values_to = "Coefficient")
  coef.sd_long <- pivot_longer(coef.sd, cols = 1:ncol(model$coefficients),
                               names_to = "spp",
                               values_to = "SE")
  coef_df <- left_join(coef_long, coef.sd_long, by = intersect(names(coef_long), names(coef.sd_long)))
  coef_df$modelName <- model.name
  return(coef_df)
}

models <- list(m1, m3)
names(models) <- paste0("m", c(1,3))
allModelFrame <- lapply(1:2, function(x) getCoefsLong(models[[x]], which.Xcoef = c(2:3), model.name = names(models)[x] ) ) %>%
  bind_rows()

# Specify the width of your confidence intervals
interval1 <- -qnorm((1-0.95)/2)  # 95% multiplier
interval2 <- -qnorm((1-0.95)/2)  # 95% multiplier

# Plot
zp1 <- ggplot(allModelFrame, aes(colour = modelName))
zp1 <- zp1 + geom_hline(yintercept = 0, colour = gray(1/2), lty = 2)
zp1 <- zp1 + geom_linerange(aes(x = Variable, ymin = Coefficient - SE*interval1,
                                ymax = Coefficient + SE*interval1),
                            lwd = 1, position = position_dodge(width = 1/2))+
  ylim(-10, 10) + geom_pointrange(aes(x = Variable,  y = Coefficient, ymin = Coefficient - SE*interval2,
                                 ymax = Coefficient + SE*interval2),
                             lwd = 1/2, position = position_dodge(width = 1/2),
                             shape = 21, fill = "WHITE")
zp1 <- zp1 +
  theme(panel.grid.major.x=element_blank(),
    panel.grid.minor.x=element_blank(),
    axis.text.x = element_text(angle=90, hjust=1)) +
  facet_grid(. ~ spp, scales="free_x", space="free_x", shrink=TRUE, drop=TRUE)
zp1 <- zp1 + ggtitle("Comparing several models")
print(zp1)  # The trick to these is position_dodge()
